apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    template.alpha.openshift.io/wait-for-ready: 'true'
  name: ci-postgresql-cv
  namespace: my-data
  labels:
    app: CI
spec:
  replicas: 1
  selector:
    name: ci-postgresql-cv
  strategy:
    activeDeadlineSeconds: 21600
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    type: Recreate
  template:
    metadata:
      labels:
        name: ci-postgresql-cv
    spec:
      containers:
        - env:
            - name: POSTGRESQL_USER
              value: postgresuser
            - name: POSTGRESQL_PASSWORD
              value: postgrespassword
            - name: POSTGRESQL_DATABASE
              value: cv
          image: docker-registry.default.svc:5000/openshift/postgresql@sha256:75b2d147b559487a42bf37e48867a09337e7f02ba91c8ff420be3c5a74faef9d
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - '--live'
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: ci-postgresql-cv
          ports:
            - containerPort: 5432
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /usr/libexec/check-container
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: ci-postgresql-cv-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: ci-postgresql-cv-data
  triggers:
    - type: ConfigChange
---
apiVersion: v1
kind: Service
metadata:
  name: ci-postgresql-cv
  namespace: my-data
  labels:
    app: CI
spec:
  ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    name: ci-postgresql-cv
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    template.alpha.openshift.io/wait-for-ready: 'true'
  name: ci-postgresql-operator
  namespace: my-data
  labels:
    app: CI
spec:
  replicas: 1
  selector:
    name: ci-postgresql-operator
  strategy:
    activeDeadlineSeconds: 21600
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    type: Recreate
  template:
    metadata:
      labels:
        name: ci-postgresql-operator
    spec:
      containers:
        - env:
            - name: POSTGRESQL_USER
              value: postgresuser
            - name: POSTGRESQL_PASSWORD
              value: postgrespassword
            - name: POSTGRESQL_DATABASE
              value: mydata
          image: docker-registry.default.svc:5000/openshift/postgresql@sha256:75b2d147b559487a42bf37e48867a09337e7f02ba91c8ff420be3c5a74faef9d
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - '--live'
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: ci-postgresql-operator
          ports:
            - containerPort: 5432
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /usr/libexec/check-container
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: ci-postgresql-operator-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: ci-postgresql-operator-data
  triggers:
    - type: ConfigChange
---
apiVersion: v1
kind: Service
metadata:
  name: ci-postgresql-operator
  namespace: my-data
  labels:
    app: CI
spec:
  ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
  selector:
    name: ci-postgresql-operator
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    template.alpha.openshift.io/wait-for-ready: 'true'
  name: ci-redis
  namespace: my-data
  labels:
    app: CI
spec:
  replicas: 1
  selector:
    name: ci-redis
  strategy:
    activeDeadlineSeconds: 21600
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: ci-redis
    spec:
      containers:
        - env:
            - name: REDIS_PASSWORD
              value: fubar
          image: docker-registry.default.svc:5000/openshift/redis@sha256:e020a18ebde5c44ec58c38249b3e4ec93e1303840d8e9458eb5a7d4aa31d894a
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
            - containerPort: 6379
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - >-
                  test "$(redis-cli -h 127.0.0.1 -a $REDIS_PASSWORD ping)" ==
                  "PONG"
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/redis/data
              name: ci-redis-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: ci-redis-data
  triggers:
    - type: ConfigChange
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: CI
  name: ci-redis
  namespace: my-data
spec:
  ports:
    - name: redis
      port: 6379
      protocol: TCP
      targetPort: 6379
  selector:
    name: ci-redis
  sessionAffinity: None
  type: ClusterIP
